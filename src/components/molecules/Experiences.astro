---
import {getCollection} from 'astro:content';
import OneColumnLayout from '@/components/atoms/OneColumnLayout.astro';
import Technologies from '@/components/atoms/Technologies.astro';

const experiences = await getCollection('experiences');
---

<OneColumnLayout className="Experiences">
  <h2 slot="title">Experiences</h2>
  {
    experiences
      .sort((a, b) => {
        const aStart = new Date(a.data.when.start).getTime();
        const bStart = new Date(b.data.when.start).getTime();
        return bStart - aStart;
      })
      .map(
        async ({
          data: {
            title,
            url,
            where,
            when: {start, end},
            technologies,
          },
          body,
          render,
        }) => {
          const {Content} = await render();
          return (
            <section slot="first">
              <section class="Content">
                <span>
                  <a href={url} target="_blank">
                    {title}
                  </a>
                  <span>@ {where}</span>
                  <sub>
                    {start} - {end}
                  </sub>
                </span>
                <Content />
              </section>
              <span class="Technologies">
                {technologies.map((technology: string) => (
                  <span>
                    <Technologies icon={technology.toLowerCase().replaceAll(' ', '')} />
                    <sub>{technology}</sub>
                  </span>
                ))}
              </span>
            </section>
          );
        },
      )
  }
</OneColumnLayout>

<style lang="scss">
  @use '@/styles/mixins' as *;
  @use '@/styles/breakpoints' as *;

  .Experiences {
    > :global(section) {
      gap: 32px !important;
      > section {
        display: flex;
        flex-direction: column;

        > .Content {
          > span {
            display: flex;
            gap: 1ch;
            flex-direction: column;

            @include mq($bp--sm) {
              flex-direction: row;
            }

            > span {
              flex-grow: 1;
            }
            > sub {
              font-style: italic;
            }
          }
        }

        > span.Technologies {
          display: flex;
          flex-direction: column;
          gap: 16px;
          flex-wrap: wrap;

          @include mq($bp--xs) {
            flex-direction: row;
          }

          > span {
            display: flex;
            flex-direction: row;
            justify-content: center;
            gap: 8px;

            @include mq($bp--xs) {
              justify-content: flex-start;
            }

            > sub {
              font-style: italic;
            }
          }
        }
      }
    }
  }
</style>
