---
export let ratio: '1:1:1' | '1:1:2' | '1:2:1' | '2:1:1' | '1:2:2' | '2:1:2' | '2:2:1' = '1:1:1';
const className = Astro.props.className || '';
---

<section class={`Layout ${className}`}>
  <slot name="title" />
  <section data-ratio={ratio}>
    <slot name="first" />
    <slot name="second" />
    <slot name="third" />
  </section>
</section>

<style lang="scss">
  @use '@/styles/mixins' as *;
  @use '@/styles/breakpoints' as *;

  .Layout {
    display: flex;
    flex-direction: column;
    background-color: var(--gray);
    border-radius: 8px;
    padding: 16px;
    gap: 16px;
    > :global(:is(h1, h2, h3, h4, h5, h6)) {
      margin-bottom: 0;
    }
    > section {
      display: grid;
      grid-template-rows: 1fr;

      @include mq($bp--sm) {
        &[data-ratio='1:1:1'] {
          grid-template-columns: 1fr 1fr 1fr;
        }

        &[data-ratio='1:1:2'] {
          grid-template-columns: 1fr 1fr 2fr;
        }

        &[data-ratio='1:2:1'] {
          grid-template-columns: 1fr 2fr 1fr;
        }

        &[data-ratio='2:1:1'] {
          grid-template-columns: 2fr 1fr 1fr;
        }

        &[data-ratio='1:2:2'] {
          grid-template-columns: 1fr 2fr 2fr;
        }

        &[data-ratio='2:1:2'] {
          grid-template-columns: 2fr 1fr 2fr;
        }

        &[data-ratio='2:2:1'] {
          grid-template-columns: 2fr 2fr 1fr;
        }
      }
    }
  }
</style>
